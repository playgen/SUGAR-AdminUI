
// Generated by CoffeeScript 1.10.0
'use strict';

/**
 * @ngdoc service
 * @name sgaAdminApp.Api
 * @description
 * # Api
 * Service in the sgaAdminApp.
 */
angular.module('sgaAdminApp').service('UsersApi', [
	'$http', 'config',
	function($http, config) {
		return {
			'users': {
				list: function() {
					return $http.get(config.api.baseurl + '/user/list');
				},
				get: function(username) {
					return $http.get(config.api.baseurl + '/user/find/' + username + "/true");
				},
				getById: function(id) {
					return $http.get(config.api.baseurl + '/user/findbyid/' + id)
				},
				create: function(item) {
					return $http.post(config.api.baseurl + '/account/create', item);
				},
				update: function(id, item) {
					return $http.put(config.api.baseurl + "/user/update/" + id, item);
				},
				"delete": function(id) {
					return $http["delete"](config.api.baseurl + ("/user/" + id));
				}
			},
			'friends': {
				list: function(id) {
					return $http.get(config.api.baseurl + "/userfriend/friends/" + id);
				},
				get: function(id) {
					return $http.get(config.api.baseurl + ("/userfriend/" + id));
				},
				create: function(item) {
					return $http.post(config.api.baseurl + '/userfriend', item)
				},
				update: function(item) {
					return $http.put(config.api.baseurl + "/userfriend", item);
				},
				"delete": function(id) {
					return $http["delete"](config.api.baseurl + ("/userfriend/" + id));
				}
			},
			'friendRequests': {
				listSentRequests: function(id) {
					return $http.get(config.api.baseurl + ("/userfriend/sentrequests/" + id));
				},
				listRequests: function(id) {
					return $http.get(config.api.baseurl + "/userfriend/requests/" + id);
				},
				update: function(item) {
					return $http.put(config.api.baseurl + '/userfriend/request', item);
				}
			},
			'userGroups': {
				list: function(id) {
					return $http.get(config.api.baseurl + '/groupmember/usergroups/' + id);
				},
				get: function(id) {
					return $http.get(config.api.baseurl + ("/groupmember/usergroup/" + id));
				},
				getGroup: function(username) {
					return $http.get(config.api.baseurl + ("/group/find/" + username));
				},
				createMember: function(item) {
					return $http.post(config.api.baseurl + '/groupmember', item)
				},
				update: function(item) {
					return $http.put(config.api.baseurl + "/groupmember", item);
				},
				"delete": function(item) {
					return $http["delete"](config.api.baseurl + "/groupmember", item);
				}
			},
			'actorClaim': {
				list: function(id){
					return $http.get(config.api.baseurl + '/ActorClaim/actor/' + id)
				},
			},
			'roles': {
				getActorRole: function(actorId, entityId, scopeName) {
					return $http.get(config.api.baseurl + '/ActorRole/actor/' + actorId + '/entity/' + entityId + '/claimscope/' + scopeName);
				},
			},
			'data': {
				list: function(id, gameId) {
					return $http.get(config.api.baseurl + '/actordata?actorId=' + id + "&gameId=" + gameId);
				},
				create: function(item) {
					return $http.post(config.api.baseurl + '/actordata', item);
				},
				update: function(item) {
					return $http.put(config.api.baseurl + '/actordata', item);
				}
			}
		};
	}
]);
