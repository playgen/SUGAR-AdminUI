// Generated by CoffeeScript 1.10.0
'use strict';

/**
 * @ngdoc function
 * @name sgaAdminApp.controller:UsersCtrl
 * @description
 * # UsersCtrl
 * Controller of the sgaAdminApp
 */
angular.module('sgaAdminApp').controller('AuthenticationSourcesCtrl', [
	'$scope', '$stateParams', '$location', 'permissionService', 'modalManager', 'SourcesApi',
	function($scope, $stateParams, $location, permissionService, modalManager, SourcesApi) {
		$scope.permissionService = permissionService;

		$scope.hasGetListPermission;
		$scope.hasCreatePermission;
		$scope.hasDeletePermission;

		$scope.items = [];
		$scope.pagination = {
			perPage: 10,
			currentPage: 1
		};
		$scope.CreateNewData = false;

		$scope.init = function()
		{
			$scope.hasGetListPermission = true;// permissionService.hasAccessToClaim('GetAccountSource', -1);
			$scope.hasCreatePermission = permissionService.hasAccessToClaim('CreateAccountSource', -1);
			$scope.hasDeletePermission = permissionService.hasAccessToClaim('DeleteAccountSource', -1)
			
			if (!$scope.hasGetListPermission)
			{
				return;
			}
			SourcesApi['sources'].list($scope.itemId).then(function(res){
				if (res.status === 200 && res.data['response'] != null)
				{
					$scope.items = res.data['response'];
				}
			});
		}
		$scope.addData = function()
		{
			$scope.CreateNewData = !$scope.CreateNewData;
		}
		$scope.create = function(formData)
		{
			var formActorData = {token: formData.token, description: formData.description, requiresPassword: formData.requiresPassword};

			SourcesApi['sources'].create(formActorData).then(function(res){
				$scope.init();
				$scope.CreateNewData = false;
			});
		}
		$scope.back = function() {
			//go back to main menu
			$location.path("/");
		};
		$scope.remove = function(item){
			var id = item.id;
			if (id == 1)
			{
				// We cannot delete SUGAR
				return;
			}
			SourcesApi['sources']["delete"](id).then(function(res){
				$scope.init();
			});
		}
	}
]);
