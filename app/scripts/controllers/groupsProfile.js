// Generated by CoffeeScript 1.10.0
'use strict';

/**
 * @ngdoc function
 * @name sgaAdminApp.controller:GroupsProfileCtrl
 * @description
 * # UsersCtrl
 * Controller of the sgaAdminApp
 */
angular.module('sgaAdminApp').controller('GroupsProfileCtrl', [
	'$scope', '$stateParams', '$location', 'modalManager', 'GroupsApi',
	function($scope, $stateParams, $location, modalManager, GroupsApi) {
		$scope.itemtype = $stateParams.itemtype;
		$scope.itemId = $stateParams.itemId;

		$scope.groupName = '';
		$scope.groupFound = true;

		$scope.items = [];
		$scope.pagination = {
			perPage: 10,
			currentPage: 1
		};
		$scope.init = function() {
			GroupsApi['members'].list($scope.itemId).then(function(res) {
				if ((res != null ? res.status : void 0) === 200 && (res.data != null)) {
					$scope.items = res.data['response'];
				}
			});
			GroupsApi['groups'].getById($scope.itemId).then(function(res) {
				if (res.status === 200 && res.data != null) {
					$scope.groupName = res.data['response'].name;
				} else {
					$scope.groupFound = false;
				}
			}).catch(function() {
				$scope.groupFound = false;
			});
		};
		$scope["delete"] = function(item) {
			return modalManager.open('deleteGroup', {
				itemtype: 'groups',
				groupName: $scope.groupName,
				itemId: $scope.itemId
			});
		};
		//our buttons
		$scope.remove = function(item) {
			var friendship = "{ RequestorId: " + item.id + ", AcceptorId: " + $scope.itemId + ", Accepted: false }"
			GroupsApi['members'].update(friendship).then(function(res) {
				$scope.init();
			});
		};
		$scope.add = function(item) {
			return modalManager.open('addMember', {
				itemtype: $scope.itemtype,
				itemId: $scope.itemId
			});
		};
		$scope.back = function() {
			//go back to group list
			$location.path("/groups");
		};
		return $scope.$on('savedItem', function(event, args) {
			return $scope.init();
		});

	}
]).controller('addMemberModalCtrl', [
	'$scope', '$rootScope', '$uibModalInstance', 'GroupsApi', 'modalManager', 'modaldata',
	function($scope, $rootScope, $uibModalInstance, GroupsApi, modalManager, modaldata) {
		$scope.groupName = modaldata.groupName;
		$scope.itemId = modaldata.itemId;

		$scope.exists = true;

		if (modaldata.item != null) {
			$scope.item = modaldata.item;
		} else if (modaldata.itemid != null) {
			GroupsApi[$scope.itemtype].get(modaldata.itemid).then(function(data) {
				if ((data != null ? data.data : void 0) != null) {
					return $scope.item = data.data;
				}
			});
		}

		//our buttons
		$scope.closeModal = function() {
			$scope.exists = true;
			$uibModalInstance.close();
		};
		$scope.add = function(item) {
			GroupsApi['user'].get($scope.txtBox)

			.then(function(res) {
				if (res.data['response'][0] != null) {
					//put the data backwards for testing as groups cannot request users join
					var friendship = "{ RequestorId: " + res.data['response'][0].id + ", AcceptorId: " + $scope.itemId + ", AutoAccept: true }"
					GroupsApi['members'].create(friendship)

					.then(function(res) {
						$uibModalInstance.close();
						$rootScope.$broadcast('savedItem')
					});
				} else
					$scope.exists = false;
			});
		};
	}
]).controller('ConfirmDeleteGroupModalCtrl', [
	'$scope', '$rootScope', '$location', '$uibModalInstance', 'GroupsApi', 'modaldata',
	function($scope, $rootScope, $location, $uibModalInstance, GroupsApi, modaldata) {
		$scope.itemtype = modaldata.itemtype;
		$scope.groupName = modaldata.groupName;
		$scope.itemId = modaldata.itemId;

		if (modaldata.item != null) {
			$scope.item = modaldata.item;
		} else if (modaldata.itemid != null) {
			$scope.item = {};
			usersApi[$scope.itemtype].get(modaldata.itemid).then(function(data) {
				return console.log(data);
			});
		}
		$scope["delete"] = function() {
			return GroupsApi[$scope.itemtype]["delete"]($scope.itemId).then(function() {
				$uibModalInstance.close();
				$location.path("/groups");
			});
		};
		return $scope.closeModal = function() {
			return $uibModalInstance.close();
		};
	}
]);


