// Generated by CoffeeScript 1.10.0
'use strict';

/**
 * @ngdoc function
 * @name sgaAdminApp.controller:GroupsCtrl
 * @description
 * # GroupsCtrl
 * Controller of the sgaAdminApp
 */
angular.module('sgaAdminApp').controller('LeaderboardsFilterCtrl', [
	'$scope', '$routeParams', '$location', 'modalManager', 'LeaderboardsApi',
	function($scope, $routeParams, $location, modalManager, LeaderboardsApi) {
		$scope.itemtype = $routeParams.itemtype;
		$scope.itemId = $routeParams.itemId;

		$scope.gameFound = true;
		$scope.gameName = '';

		$scope.items = [];
		$scope.pagination = {
			perPage: 10,
			currentPage: 1
		};
		$scope.init = function() {
			if ($scope.itemId != "global")
			{
				return LeaderboardsApi['leaderboard'].list($scope.itemId).then(function(res) {
					if (res.status === 200 && res.data != null) {
						$scope.items = res.data['response'];
					}
				});
				LeaderboardsApi['games'].get($scope.itemId).then(function(res) {
					if (res.status === 200 && res.data != null) {
						$scope.gameFound = true;
						$scope.gameName = res.data['response'].name;
					} else {
						$scope.gameFound = false;
					}
				}).catch(function() {
					$scope.gameFound = false;
				});	
			}
			else
			{
				return LeaderboardsApi['leaderboard'].getGlobal().then(function(res) {
					if (res.status === 200 && res.data != null) {
						$scope.items = res.data['response'];
					}
				});

				$scope.gameName = "Global";
				$scope.gameFound = true;
			}
		};
		
		$scope.add = function(item) {
			return modalManager.open('newLeaderboard', {
				itemId: $scope.itemId
			});
		};
		$scope["delete"] = function(item) {
			return modalManager.open('deleteLeaderboard', {
				item: item,
				itemId: $scope.itemId

			});
		};
		$scope.showLeaderboard = function(item) {
			$location.path('/leaderboards/' + $scope.itemId + '/' + item.token);
		}
		$scope.back = function() {
			//go back to resources games list
			$location.path("/leaderboards");
		};
		return $scope.$on('savedItem', function(event, args) {
			return $scope.init();
		});
	}
]).controller('CreateLeaderboardModalCtrl', [
	'$scope', '$rootScope', '$uibModalInstance', 'LeaderboardsApi', 'modaldata',
	function($scope, $rootScope, $uibModalInstance, LeaderboardsApi, modaldata) {
		$scope.itemId = modaldata.itemId;
		$scope.item = {};

		$scope.save = function() {
			$scope.item.GameId = $scope.itemId;
			return LeaderboardsApi['leaderboard'].createFilter($scope.item).then(function() {
				$uibModalInstance.close();
				return $rootScope.$broadcast('savedItem');
			});
		};
		return $scope.close = function() {
			return $uibModalInstance.close();
		};
	}
]).controller('ConfirmDeleteLeaderboardModalCtrl', [
	'$scope', '$rootScope', '$uibModalInstance', 'LeaderboardsApi', 'modaldata',
	function($scope, $rootScope, $uibModalInstance, LeaderboardsApi, modaldata) {

		$scope.item = modaldata.item;
		$scope.itemId = modaldata.itemId;

		if (modaldata.item != null) {
			$scope.item = modaldata.item;
		} else if (modaldata.itemid != null) {
			$scope.item = {};
			usersApi[$scope.itemtype].get(modaldata.itemid).then(function(data) {
				return console.log(data);
			});
		}
		$scope["delete"] = function() {
			if ($scope.itemId != "global")
			{
				return LeaderboardsApi['leaderboard'].delete($scope.item.token, item.id).then(function(res) {
					$uibModalInstance.close();
					return $rootScope.$broadcast('savedItem');
				});
			}
			else
			{
				return LeaderboardsApi['leaderboard'].deleteGlobal($scope.item.token).then(function(res) {
					$uibModalInstance.close();
					return $rootScope.$broadcast('savedItem');
				});
			}
		};
		return $scope.close = function() {
			return $uibModalInstance.close();
		};
	}
]);
