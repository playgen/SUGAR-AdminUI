// Generated by CoffeeScript 1.10.0
'use strict';

/**
 * @ngdoc function
 * @name sgaAdminApp.controller:UsersCtrl
 * @description
 * # UsersCtrl
 * Controller of the sgaAdminApp
 */
angular.module('sgaAdminApp').controller('UsersProfileCtrl', [
	'$scope', '$stateParams', '$location', 'modalManager', 'UsersApi',
	function($scope, $stateParams, $location, modalManager, UsersApi) {
		$scope.itemtype = $stateParams.itemtype;
		$scope.itemId = $stateParams.itemId;

		$scope.showFriends = false;
		$scope.showGroups = false;
		$scope.showInfo = false;
		$scope.showAccount = false;

		$scope.userFound = true;

		$scope.userName = '';

		$scope.items = [];
		$scope.pendings = [];
		$scope.requests = [];

		$scope.pagination = {
			perPage: 10,
			currentPage: 1
		};
		$scope.init = function() {
			if ($scope.showFriends)
			{
				$scope.items = [];
				$scope.pendings = [];
				$scope.requests = [];
				UsersApi['friends'].list($scope.itemId).then(function(res) {
					if ((res != null ? res.status : void 0) === 200 && (res.data['response'].length > 0)) {
						$scope.items = res.data['response'];
					}
				});
				UsersApi['friendRequests'].listPending($scope.itemId).then(function(res) {
					if (res.status === 200 && res.data != null) {
						$scope.pendings = res.data['response'];
					}
				});
				UsersApi['friendRequests'].list($scope.itemId).then(function(res) {
					if (res != null && res.data != null) {
						$scope.requests = res.data['response'];
					}
				});
			}
			if ($scope.showGroups)
			{
				UsersApi['userGroups'].list($scope.itemId).then(function(res) {
				if (res.status === 200 && res.data != null) {
					$scope.items = res.data['response'];
				}
			});
			}
			UsersApi['users'].getById($scope.itemId).then(function(res) {
				if (res.status === 200 && res.data['response'].name != null) {
					$scope.userName = res.data['response'].name;
					$scope.userFound = true;
				} else {
					$scope.userFound = false;
				}
			}).catch(function() {
				$scope.userFound = false;
			});
		};
		$scope.userFriends = function() {
			$scope.DisableViews();
			$scope.showFriends = true;

			$scope.init();
		};
		$scope.userGroups = function() {
			$scope.DisableViews();
			$scope.showGroups = true;

			$scope.init();
		};
		$scope.userInfo = function(){
			$scope.DisableViews();
			$scope.showInfo = true;

			$scope.init();
		};
		$scope.userAccount = function(){
			$scope.DisableViews();
			$scope.showAccount = true;

			$scope.init();
		};
		$scope.closeTable = function(){
			$scope.DisableViews();

			$scope.init();
		};

		$scope.addFriend = function(item) {
			return modalManager.open('addFriend', {
				userName: $scope.userName,
				itemId: $scope.itemId,
				item: item
			});
		};
		$scope.addGroup = function(item) {
			return modalManager.open('addGroup', {
				itemtype: $scope.itemtype,
				itemId: $scope.itemId,
				item: item
			});
		};

		$scope["delete"] = function(item) {
			return modalManager.open('deleteUser', {
				itemtype: 'users',
				userName: $scope.userName,
				itemId: $scope.itemId
			});
		};

		$scope.back = function() {
			//go back to users list
			$location.path("/users");
		};

		$scope.DisableViews = function(){
			$scope.showGroups = false;
			$scope.showFriends = false;
			$scope.showInfo = false;
			$scope.showAccount = false;
		};

		return $scope.$on('savedItem', function(event, args) {
			return $scope.init();
		});

	}
]).controller('addFriendModalCtrl', [
	'$scope', '$rootScope', '$uibModalInstance', 'UsersApi', 'modalManager', 'modaldata',
	function($scope, $rootScope, $uibModalInstance, UsersApi, modalManager, modaldata) {
		$scope.userName = modaldata.userName;
		$scope.config = modaldata.config;
		$scope.itemId = modaldata.itemId;

		$scope.exists = true;

		if (modaldata.item != null) {
			$scope.item = modaldata.item;
		} else if (modaldata.itemid != null) {
			UsersApi[$scope.itemtype].get(modaldata.itemid).then(function(data) {
				if ((data != null ? data.data : void 0) != null) {
					return $scope.item = data.data;
				}
			});
		}

		//our buttons
		$scope.closeModal = function() {
			$scope.exists = true;
			$uibModalInstance.close();
		};
		$scope.add = function(item) {
			UsersApi['users'].get($scope.txtBox)

			.then(function(res) {
				if (res.data['response'][0] != null) {
					//put the data backwards for testing as groups cannot request users join
					var friendship = "{ RequestorId: " + $scope.itemId + ", AcceptorId: " + res.data['response'][0].id + " }"
					UsersApi['friends'].create(friendship)

					.then(function(res) {
						$uibModalInstance.close();
						$rootScope.$broadcast('savedItem')
					});
				} else
					$scope.exists = false;
			});
		};
	}
]).controller('addGroupModalCtrl', [
	'$scope', '$rootScope', '$uibModalInstance', 'UsersApi', 'modalManager', 'modaldata',
	function($scope, $rootScope, $uibModalInstance, UsersApi, modalManager, modaldata) {
		$scope.itemtype = modaldata.itemtype;
		$scope.config = modaldata.config;
		$scope.itemId = modaldata.itemId;
		$scope.exists = true;

		if (modaldata.item != null) {
			$scope.item = modaldata.item;
		} else if (modaldata.itemid != null) {
			UsersApi[$scope.itemtype].get(modaldata.itemid).then(function(data) {
				if ((data != null ? data.data : void 0) != null) {
					return $scope.item = data.data;
				}
			});
		}

		//our buttons
		$scope.closeModal = function() {
			$scope.exists = true;
			return $uibModalInstance.close();
		};

		$scope.add = function(item) {
			UsersApi['userGroups'].getGroup($scope.txtBox)

			.then(function(res) {
				if (res.data['response'][0] != null) {
					//put the data backwards for testing as groups cannot request users join
					var friendship = "{ RequestorId: " + $scope.itemId + ", AcceptorId: " + res.data['response'][0].id + ", AutoAccept: true }"
					UsersApi['userGroups'].createMember(friendship).then(function(res) {
						$uibModalInstance.close();
						$rootScope.$broadcast('savedItem');
					});

				} else
					$scope.exists = false;
			});
		};
	}
]).controller('ConfirmDeleteUserModalCtrl', [
	'$scope', '$rootScope', '$location', '$uibModalInstance', 'UsersApi', 'modaldata',
	function($scope, $rootScope, $location, $uibModalInstance, UsersApi, modaldata) {
		$scope.itemtype = modaldata.itemtype;
		$scope.userName = modaldata.userName;
		$scope.itemId = modaldata.itemId;

		if (modaldata.item != null) {
			$scope.item = modaldata.item;
		} else if (modaldata.itemid != null) {
			$scope.item = {};
			usersApi[$scope.itemtype].get(modaldata.itemid).then(function(data) {
				return console.log(data);
			});
		}
		$scope["delete"] = function() {
			return UsersApi[$scope.itemtype]["delete"]($scope.itemId).then(function() {
				$uibModalInstance.close();
				$location.path("/users");
			});
		};
		return $scope.close = function() {
			return $uibModalInstance.close();
		};
	}
]);


