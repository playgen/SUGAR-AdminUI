// Generated by CoffeeScript 1.10.0
'use strict';
module.exports = function(grunt) {
  var appConfig;
  require('time-grunt')(grunt);
  require('jit-grunt')(grunt, {
    useminPrepare: 'grunt-usemin',
    ngtemplates: 'grunt-angular-templates',
    cdnify: 'grunt-google-cdn'
  });
  appConfig = {
    app: require('./bower.json').appPath || 'app',
    dist: 'dist'
  };
  grunt.initConfig({
    yeoman: appConfig,
    watch: {
      bower: {
        files: ['bower.json'],
        tasks: ['wiredep']
      },
    //   coffee: {
    //     files: ['<%= yeoman.app %>/scripts/{,*/}*.{coffee,litcoffee,coffee.md}'],
    //     tasks: ['newer:coffee:dist']
    //   },
    //   coffeeTest: {
    //     files: ['test/spec/{,*/}*.{coffee,litcoffee,coffee.md}'],
    //     tasks: ['newer:coffee:test', 'karma']
    //   },
      less: {
        files: ['<%= yeoman.app %>/styles/**/*.less'],
        tasks: ['less']
      },
      styles: {
        files: ['<%= yeoman.app %>/styles/{,*/}*.css'],
        tasks: ['newer:copy:styles', 'postcss']
      },
      gruntfile: {
        files: ['Gruntfile.js']
      },
      livereload: {
        options: {
          livereload: '<%= connect.options.livereload %>'
        },
        files: ['<%= yeoman.app %>/{,*/}*.html', '<%= yeoman.app %>/styles/*.less', '.tmp/scripts/{,*/}*.js', '<%= yeoman.app %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}']
      }
    },
    connect: {
      options: {
        port: 9005,
        hostname: 'localhost',
        livereload: 35729
      },
      livereload: {
        options: {
          open: true,
          middleware: function(connect) {
            return [connect["static"]('.tmp'), connect().use('/bower_components', connect["static"]('./bower_components')), connect().use('/app/styles', connect["static"]('./app/styles')), connect["static"](appConfig.app)];
          }
        }
      },
      test: {
        options: {
          port: 9001,
          middleware: function(connect) {
            return [connect["static"]('.tmp'), connect["static"]('test'), connect().use('/bower_components', connect["static"]('./bower_components')), connect["static"](appConfig.app)];
          }
        }
      },
      dist: {
        options: {
          open: true,
          base: '<%= yeoman.dist %>'
        }
      }
    },
    jshint: {
      options: {
        jshintrc: '.jshintrc',
        reporter: require('jshint-stylish')
      },
      all: {
        src: ['Gruntfile.js']
      }
    },
    clean: {
      dist: {
        files: [
          {
            dot: true,
            src: ['.tmp', '<%= yeoman.dist %>/{,*/}*', '!<%= yeoman.dist %>/.git{,*/}*']
          }
        ]
      },
      server: '.tmp'
    },
    postcss: {
      options: {
        processors: [
          require('autoprefixer-core')({
            browsers: ['last 1 version']
          })
        ]
      },
      server: {
        options: {
          map: true
        },
        files: [
          {
            expand: true,
            cwd: '.tmp/styles/',
            src: '{,*/}*.css',
            dest: '.tmp/styles/'
          }
        ]
      },
      dist: {
        files: [
          {
            expand: true,
            cwd: '.tmp/styles/',
            src: '{,*/}*.css',
            dest: '.tmp/styles/'
          }
        ]
      }
    },
    wiredep: {
      app: {
        src: ['<%= yeoman.app %>/index.html'],
        ignorePath: /\.\.\//
      },
      test: {
        devDependencies: true,
        src: '<%= karma.unit.configFile %>',
        ignorePath: /\.\.\//,
        fileTypes: {
          js: {
            block: /(([\s\t]*)#\s*?bower:\s*?(\S*))(\n|\r|.)*?(#\s*endbower)/gi,
            detect: {
              js: /'(.*\.js)'/gi,
            //   coffee: /'(.*\.coffee)'/gi
            },
            replace: {
              js: '\'{{filePath}}\'',
            //   coffee: '\'{{filePath}}\''
            }
          }
        }
      }
    },
    // coffee: {
    //   options: {
    //     sourceMap: true,
    //     sourceRoot: ''
    //   },
    //   dist: {
    //     files: [
    //       {
    //         expand: true,
    //         cwd: '<%= yeoman.app %>/scripts',
    //         src: '{,*/}*.coffee',
    //         dest: '.tmp/scripts',
    //         ext: '.js'
    //       }
    //     ]
    //   },
    //   test: {
    //     files: [
    //       {
    //         expand: true,
    //         cwd: 'test/spec',
    //         src: '{,*/}*.coffee',
    //         dest: '.tmp/spec',
    //         ext: '.js'
    //       }
    //     ]
    //   }
    // },
    filerev: {
      dist: {
        src: ['<%= yeoman.dist %>/scripts/{,*/}*.js', '<%= yeoman.dist %>/styles/{,*/}*.css', '<%= yeoman.dist %>/images/{,*/}*.{png,jpg,jpeg,gif,webp,svg}', '<%= yeoman.dist %>/styles/fonts/*']
      }
    },
    useminPrepare: {
      html: '<%= yeoman.app %>/index.html',
      options: {
        dest: '<%= yeoman.dist %>',
        flow: {
          html: {
            steps: {
              js: ['concat', 'uglifyjs'],
              css: ['cssmin']
            },
            post: {}
          }
        }
      }
    },
    usemin: {
      html: ['<%= yeoman.dist %>/{,*/}*.html'],
      css: ['<%= yeoman.dist %>/styles/{,*/}*.css'],
      js: ['<%= yeoman.dist %>/scripts/{,*/}*.js'],
      options: {
        assetsDirs: ['<%= yeoman.dist %>', '<%= yeoman.dist %>/images', '<%= yeoman.dist %>/styles'],
        patterns: {
          js: [[/(images\/[^''""]*\.(png|jpg|jpeg|gif|webp|svg))/g, 'Replacing references to images']]
        }
      }
    },
    imagemin: {
      dist: {
        files: [
          {
            expand: true,
            cwd: '<%= yeoman.app %>/images',
            src: '{,*/}*.{png,jpg,jpeg,gif}',
            dest: '<%= yeoman.dist %>/images'
          }
        ]
      }
    },
    svgmin: {
      dist: {
        files: [
          {
            expand: true,
            cwd: '<%= yeoman.app %>/images',
            src: '{,*/}*.svg',
            dest: '<%= yeoman.dist %>/images'
          }
        ]
      }
    },
    htmlmin: {
      dist: {
        options: {
          collapseWhitespace: true,
          conservativeCollapse: true,
          collapseBooleanAttributes: true,
          removeCommentsFromCDATA: true
        },
        files: [
          {
            expand: true,
            cwd: '<%= yeoman.dist %>',
            src: ['*.html'],
            dest: '<%= yeoman.dist %>'
          }
        ]
      }
    },
    ngtemplates: {
      dist: {
        options: {
          module: 'sgaAdminApp',
          htmlmin: '<%= htmlmin.dist.options %>',
          usemin: 'scripts/scripts.js'
        },
        cwd: '<%= yeoman.app %>',
        src: 'views/{,*/}*.html',
        dest: '.tmp/templateCache.js'
      }
    },
    ngAnnotate: {
      dist: {
        files: [
          {
            expand: true,
            cwd: '.tmp/concat/scripts',
            src: '*.js',
            dest: '.tmp/concat/scripts'
          }
        ]
      }
    },
    less: {
      options: {
        paths: ['<%= yeoman.app %>/styles'],
        cleancss: true,
        strictMath: false,
        strictUnits: true
      },
      dist: {
        files: [
          {
            expand: true,
            cwd: '<%= yeoman.app %>/styles',
            src: ['*.less'],
            dest: '.tmp/styles',
            ext: '.css'
          }
        ]
      }
    },
    cdnify: {
      dist: {
        html: ['<%= yeoman.dist %>/*.html']
      }
    },
    copy: {
      dist: {
        files: [
          {
            expand: true,
            dot: true,
            cwd: '<%= yeoman.app %>',
            dest: '<%= yeoman.dist %>',
            src: ['*.{ico,png,txt}', '*.html', 'images/{,*/}*.{webp}', 'styles/fonts/{,*/}*.*']
          },
          {
            expand: true,
            cwd: '.tmp/images',
            dest: '<%= yeoman.dist %>/images',
            src: ['generated/*']
          },
          {
            expand: true,
            cwd: '<%= yeoman.app %>',
            dest: '.tmp',
            src: ['scripts/**/*.js']
          },
           {
            expand: true,
            cwd: 'bower_components/bootstrap/dist',
            src: 'fonts/*',
            dest: '<%= yeoman.dist %>'
          }
        ]
      },
      styles: {
        expand: true,
        cwd: '<%= yeoman.app %>/styles',
        dest: '.tmp/styles/',
        src: '{,*/}*.css'
      }
    },
    concurrent: {
    //   server: ['coffee:dist', 'less'],
    //   test: ['coffee', 'less'],
    //   dist: ['coffee', 'less', 'imagemin', 'svgmin']
      server: ['less'],
      test: ['less'],
      dist: ['less', 'imagemin', 'svgmin']
    },
    karma: {
      unit: {
        configFile: 'test/karma.conf.js',
        singleRun: true
      }
    }
  });
  grunt.registerTask('serve', 'Compile then start a connect web server', function(target) {
    if (target === 'dist') {
      return grunt.task.run(['build', 'connect:dist:keepalive']);
    }
    grunt.task.run(['clean:server', 'wiredep', 'concurrent:server', 'postcss:server', 'connect:livereload', 'watch']);
  });
  grunt.registerTask('test', ['clean:server', 'less', 'wiredep', 'concurrent:test', 'postcss', 'connect:test', 'karma']);
  grunt.registerTask('build', ['clean:dist', 'wiredep', 'useminPrepare', 'concurrent:dist', 'postcss', 'ngtemplates', 'concat', 'ngAnnotate', 'copy:dist', 'cdnify', 'cssmin', 'uglify', 'filerev', 'usemin', 'htmlmin']);
  grunt.registerTask('default', ['newer:jshint', 'test', 'build']);
};
